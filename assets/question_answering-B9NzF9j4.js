import{s as w,a as C}from"./navigation-BcvLzd7M.js";import{g as A,d as $,r as h,h as P,b as v,f as g,c as x,a as N,i as D}from"./utility-CeoLs25M.js";import{W as M}from"./worker-C-kcemA_.js";import{A as k}from"./config-YF015oXS.js";w("../..");C("../..");const I=new M,O="transformers-cache",y="distilbert-base-cased-distilled-squad",z=document.getElementById("contextInput"),U=document.getElementById("questionInput"),q=document.getElementById("answerOutput"),u=document.getElementById("progress"),F=document.getElementById("triggerBtn"),T=document.getElementById("loadingModelText"),X=document.getElementById("loadModelPromptContent"),E=document.getElementById("progressBar"),V=document.getElementById("loadModelBtn"),W=document.getElementById("modelPopover"),G=document.getElementById("modelPanelWrapper"),L=A(y),n=$(y);let R=0;F.addEventListener("click",async d=>{const e={baseURI:document.baseURI,task:"question-answering",context:z.value,question:U.value,elementIdToUpdate:q.id};R=new Date().getTime(),I.postMessage(e)});I.addEventListener("message",d=>{if(!d.data)return;const e=d.data;switch(e.type){case"download":if(e.data.status==="initiate"){if(!e.data.file||e.data.file.split(".").length>0&&e.data.file.split(".")[1]!=="onnx"||!n[e.data.file]||n[e.data.file].cached||n[e.data.file].cached)break;h(T,u),u.appendChild(P(`<div model="${e.data.name}" file="${e.data.file}"
       class="relative 2xl:my-2 my-1 2xl:rounded-2xl rounded-lg w-full 2xl:min-h-[30px] min-h-[20px] bg-stone-200/40 flex items-center justify-between font-mono"
      >
    <div class="relative px-2 z-20 2xl:text-sm text-xs" name="statusText"></div>
    <div class="relative px-2 z-20 2xl:text-sm text-xs">
      <span name="progressVal">0%</span>
    </div>
    <div
      name="progressBar"
      class="absolute top-0 2xl:rounded-2xl rounded-lg z-10 text-right bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 2xl:min-h-[30px] min-h-[20px] "
    ></div>
    </div>`))}else{if(e.data.status==="ready"){u.classList.contains("hidden")||u.classList.add("hidden"),T.classList.contains("hidden")||T.classList.add("hidden");return}const a=u.querySelector(`div[model="${e.data.name}"][file="${e.data.file}"]`),t=document.getElementById(`${e.data.file.match(/\/?([^/.]+?)(?:\.[^/.]+)?$/)[1]}StatusBar`);switch(e.data.status){case"progress":{if(!e.data.file||!n[e.data.file])break;const o=e.data.file;if(t){if(n[o]&&n[o].cached){t.textContent="loading",x("loading",t),typeof e.data.total=="number"&&!isNaN(e.data.total)&&e.data.total>0&&(n[o].size=e.data.total);return}else if(t.textContent="downloading",x("loading",t),typeof e.data.total=="number"&&!isNaN(e.data.total)&&e.data.total>0&&(n[o].size=e.data.total),a!==null){const l=a.querySelector("div[name='statusText']"),s=a.querySelector("div[name='progressBar']"),i=a.querySelector("span[name='progressVal']");s.style.height||(s.style.height="100"),s.style.width=e.data.progress.toFixed(2)+"%",i.textContent=e.data.progress.toFixed(2)+"%",l.textContent=`${e.data.file} (${g(e.data.loaded)} / ${g(e.data.total)})`}}break}case"done":{let o=new Date().getTime();if(a!==null&&a.classList.add("hidden"),h(document.getElementById(`${v(e.data.file)}StatusFlag`)),t){let l="downloaded",s=0;const i=e.data.file;n[i]&&(s=n[i].size,n[i].cached&&(l="cache loaded")),t.textContent=`${l} in ${((o-R)/1e3).toFixed(2)}s(${g(s)})`,x("loaded",t),s=0}break}}}break;case"update":{let a=e.target,t=document.getElementById(a);t.value=e.data;break}case"complete":document.getElementById(e.target).value=e.data;break}});N(y,G);function Q(){k[y].resources.map(d=>{const e=v(d),a=document.getElementById(`uploadInput4${e}`);a&&a.addEventListener("change",async function(t){const o=t.target.files;if(!o.length)return;const l=await caches.open(O);for(const s of o){const i=new FileReader;i.onprogress=function(c){if(c.lengthComputable){const f=c.loaded,r=c.total;h(E),E.innerHTML=`
             <div class="relative px-2 z-20 2xl:text-sm text-xs" id="StatusText"></div>
            <div class="relative px-2 z-20 2xl:text-sm text-xs">
              <span id="ProgressVal">0%</span>
            </div>
            <div
              id="ProgressBar"
              class="absolute top-0 rounded-2xl 2xl:text-sm text-xs z-10 text-right bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500"
            ></div>
         `;const b=document.getElementById("StatusText"),m=document.getElementById("ProgressBar"),B=document.getElementById("ProgressVal");let p=f/r*100;b.textContent="Uploading model ...",m.style.height||(m.style.height="100%"),m.style.width=`${p}%`,B.textContent=`${g(f)}/${g(r)}`}},i.onload=async function(c){const f=c.target.result,r=new Blob([f]),m=(s.name.split(".").length>0?s.name.split(".")[1]:"")==="json"?"text/plain; charset=utf-8":"binary/octet-stream",B=new Response(r,{headers:{"Content-Length":r.size.toString(),"Accept-Ranges":"bytes","Content-Type":m}}),p=L+d;await l.match(p)||l.put(p,B).then(()=>{console.log(`cache ${d} successfully.`),_()}).catch(S=>{console.error(`cache ${d} failed:`,S)}),E.classList.contains("hidden")||E.classList.add("hidden")},i.readAsArrayBuffer(s)}})})}Q();async function _(){let d=await caches.open(O);for(const e of Object.keys(n)){let a="",t="";const o=L+e,l=await d.match(o),s=document.getElementById(`${e.match(/\/?([^/.]+?)(?:\.[^/.]+)?$/)[1]}StatusBar`);!l||!l.ok?(a="unload",t="unload"):(a="cached",t="cache available",n[e].cached=!0,h(document.getElementById(`${v(e)}StatusFlag`),X)),s&&(x(a,s),s.textContent=t)}}await _();D(V,W);
